postgresql 语法
select length('0231001011')   

select substring(“0231001011, 

select length('0231001011')   

select position('10010' in '0231001011')

日期函数
extract 获取子域
epoch 获取For date and timestamp values, the number of seconds since 1970-01-01 00:00:00 UTC (can be negative);
for interval values, the total number of seconds in the interval.

翻译过来就是说，对于日期和时间戳类型的值，会获取到从1970-01-01 00:00:00 UTC这个Linux纪元年的开始时间到给定的日期或者时间戳参数的时间之间相隔的秒数。

截取最后五位
substring

select
  distinct a.call_id,b.call_id,
  d.service_type_name1
from
  (
    select
      *
    from
      dc_cube.lpy_1
  ) a,
  (
    select
      *
    from
      dc_dwd.dwd_d_media_ticket_ex_sc
    where
      date_id >= '2021-02-09'
  ) b,
  (
    select
      *
    from
      dc_dwd.dwd_d_serv_requ_ex_dts_sc
    where
      date_id = '2021-02-09'
  ) d,
  (select * from dc_dwd.dwd_d_labour_contact_ex_sc where date_id = '2021-02-09'
  ) c
where
  a.call_id = b.caller_no
  
  and b.call_id = c.call_id
  and c.contact_id = d.contact_id
  -------------------------------------------------------------------------------------------------------
  
  dc_dwa.dwa_d_ai_evaluate_all_ny  ai满意度调查表
  select * from dc_dwd.dwd_d_message_record_ex_dts_sc  短信下发记录
  
  dc_dwd.dwd_d_ivr_default_language_info_ex_sc  维语特殊名单
 ----------------------------------------------------------------------------------------------------------------------------------- 
  select * from 
(SELECT
 outbound_id ,create_time ,callerno, calleeno ,substr(calleeno ,6,4) as calleeqh,SOURCE_TYPE,CUST_LEVEL,OUTBOUND_STATUS,pro_id 
from dc_dwd.dwd_d_outbound_info_ex_ny t
WHERE date_id >='20210201'  and date_id <='20210228' 
and  t.SOURCE_TYPE = 'IVR'
AND t.CUST_LEVEL like '5%'
)aa
left join 
(select * from (select 
serial_id,call_id,contact_id,third_id,source_type,model_type,user_code,user_name,pro_id,org_id,create_time create_time1,
ROW_NUMBER ()over(partition by third_id order by create_time) as  ran
from dc_dwd.dwd_d_outline_contact_ex_ny where date_id >='20210201'  and date_id <='20210228'
)a where ran='1')bb
on aa.outbound_id=bb.third_id
left join 
(select tph_code_standard,prov_code,prov_name from dc_dim.dim_area_code_all a where tph_code_standard !='')cc
on aa.calleeqh=cc.tph_code_standard
;
  目标用户回访记录
  SELECT  distinct 
 outbound_id ,callerno 主叫号码, calleeno 被叫号码,
 contact_time 来电时间,
 last_outbound_time 外呼时间,
 last_outbound_usercode 外呼工号,
 last_outbound_username 姓名,
 substr(calleeno ,6,4) as calleeqh,
 SOURCE_TYPE,
 CUST_LEVEL 星级 ,
 OUTBOUND_STATUS 外呼状态,

(EXTRACT(epoch FROM CAST(last_outbound_time AS TIMESTAMP))-EXTRACT(epoch FROM CAST(contact_time AS TIMESTAMP)))/60 as  "间隔分钟"
from dc_dwd.dwd_d_outbound_info_ex_ny t
WHERE contact_time >= to_char(current_date - interval '1 day', 'yyyy-mm-dd')
and  t.SOURCE_TYPE = 'IVR'
AND t.CUST_LEVEL like '5%'
and last_outbound_time is not null

---------------------------------------------------------------------------------------------------------------------  
系统应答量
---------------------------------------------------------------------------------------------------------
select
   meaning "省份",
   count( distinct case when device_type in ('1','2') then call_id else null end ) usercallin,
   count( distinct case when device_type in ('1','2') then caller_no else null end ) userll,
   count(distinct case when device_type='2' and  (ack_len + call_len > 0)then call_id else null end) "人工应答量"

   
from
 (

   select distinct 
    call_id,
    call_id_num,
    substring(callee_no from position('1001' in callee_no) for 5) calleeno,
    caller_no,
    wait_begin,
    wait_end,
    EXTRACT(month from date_id) "月",
    EXTRACT(day from date_id) "天",
    EXTRACT(epoch FROM CAST(wait_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(wait_begin AS TIMESTAMP)) as wait_len,
    ack_begin,
    ack_end,
    EXTRACT(epoch FROM CAST(ack_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(ack_begin AS TIMESTAMP)) as ack_len,
    call_begin,
    call_end,
    EXTRACT(epoch FROM CAST(call_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(call_begin AS TIMESTAMP)) as call_len,
    bus_pro_id,
    device_type device_type
   
   from
    dc_dwd.dwd_d_media_ticket_ex_sc
   where
   substring(callee_no from position('1001' in callee_no) for 5) = '10010'
    and  date_id >= '2021-01-01'
    and date_id <= '2021-01-31'
    and device_type in ('1','2')
    and call_type in ('0','5','46')
	
  )aa
  
left join 
(select distinct meaning,code from dc_dim.dim_province_code_all ff ) b
on aa.bus_pro_id = b.code
group by b.meaning
------------------------------------------------------------------------------------------------------------------------------------------
select
   meaning "省份","月",
  count( distinct case when  call_id_num = '-1' and  (ack_len + call_len)> 0 then call_id else null end ) syscallin,
   count( distinct case when call_id_num = '-1' and  (ack_len + call_len) > 0  then caller_no else null end ) sysuser,
   count( distinct case when device_type in ('1','2') then call_id else null end ) usercallin,
   count( distinct case when device_type in ('1','2') then caller_no else null end ) userll,
   count(distinct case when device_type='2' and  (ack_len + call_len > 0)then call_id else null end) "人工应答量",
   count(distinct case when device_type='2' and  (ack_len + call_len > 0)then caller_no else null end) "人工应答用户数"
   
   

   
from
 (

   select distinct 
    call_id,
    call_id_num,
    substring(callee_no from position('1001' in callee_no) for 5) calleeno,
    caller_no,
    wait_begin,
    wait_end,
    EXTRACT(epoch FROM CAST(wait_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(wait_begin AS TIMESTAMP)) as wait_len,
    ack_begin,
    ack_end,
    EXTRACT(month from date_id) "月",
    EXTRACT(day from date_id) "天",
    EXTRACT(epoch FROM CAST(ack_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(ack_begin AS TIMESTAMP)) as ack_len,
    call_begin,
    call_end,
    EXTRACT(epoch FROM CAST(call_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(call_begin AS TIMESTAMP)) as call_len,
    bus_pro_id,
    
    device_type device_type,
    callee_no
	
   
   from
    dc_dwd.dwd_d_media_ticket_ex_sc
   where
   substring(callee_no from position('1001' in callee_no) for 5) = '10010'
    and  date_id >= '2020-11-01'
    and date_id <= '2021-01-31'
    and device_type in ('1','2','3','5')
    and call_type in ('0','5','46')
	and  (position('10010' in callee_no) +4) =length(callee_no)
    and media_type = '5'
	
  )aa
  
left join 
(select distinct meaning,code from dc_dim.dim_province_code_all ff ) b
on aa.bus_pro_id = b.code
group by  meaning,"月"

---------------------------------------------------------------------------------------------------------------------------------------------
新疆系统应答量
select
   meaning "省份",
   count( distinct case when device_type in ('1','2') then call_id else null end ) usercallin,
   count( distinct case when device_type in ('1','2') then caller_no else null end ) userll,
   count(distinct case when device_type='2' and  (ack_len + call_len > 0)then call_id else null end) "人工应答量"

   
from
 (

   select distinct 
    call_id,
    call_id_num,
    caller_no,
    wait_begin,
    wait_end,
    EXTRACT(epoch FROM CAST(wait_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(wait_begin AS TIMESTAMP)) as wait_len,
    ack_begin,
    ack_end,
    EXTRACT(epoch FROM CAST(ack_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(ack_begin AS TIMESTAMP)) as ack_len,
    call_begin,
    call_end,
    EXTRACT(epoch FROM CAST(call_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(call_begin AS TIMESTAMP)) as call_len,
    bus_pro_id,
    device_type device_type,
	  us_skill_id_of_call 
   
   from
    dc_dwd.dwd_d_media_ticket_ex_sc
   where
    date_id >= '2020-11-01'
    and date_id < '2020-12-01'
    and device_type in ('1','2')
    and call_type in ('0','5','46')
	  and bus_pro_id = '89'
  )aa
  
left join 
(select distinct meaning,code from dc_dim.dim_province_code_all ff ) b
on aa.bus_pro_id = b.code
join dc_cube.lpy_xinjiang_code c
on aa.us_skill_id_of_call = c.code_id

group by b.meaning

通话时长计算
----------------------------------------------------------------------------------------------------------------------------------------
drop table dc_cube.lpy_temp_2;
create table dc_cube.lpy_temp_2  as select
   meaning "省份","月","天",call_id,caller_no,sum(call_len) "通话时长"

from

 
  
   
   (select distinct 
    call_id,
    call_id_num,
    caller_no,
    wait_begin,
    wait_end,
	EXTRACT(month from date_id) "月",
    EXTRACT(day from date_id) "天",
    EXTRACT(epoch FROM CAST(wait_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(wait_begin AS TIMESTAMP)) as wait_len,
    ack_begin,
    ack_end,
    EXTRACT(epoch FROM CAST(ack_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(ack_begin AS TIMESTAMP)) as ack_len,
    call_begin,
    call_end,
    EXTRACT(epoch FROM CAST(call_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(call_begin AS TIMESTAMP)) as call_len,
    bus_pro_id,
    device_type device_type,
    lag(device_type) over(partition by call_id
   order by
    wait_begin) device_type_lag
   from
    dc_dwd.dwd_d_media_ticket_ex_sc
   where
    date_id >= '2021-01-26'
    and date_id < '2021-01-27'
    and device_type in ('2')
    and call_type in ('0','5','46')
    substring(callee_no from position('1001' in callee_no) for 5) = '10010'
    and  EXTRACT(epoch FROM CAST(ack_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(ack_begin AS TIMESTAMP)) + EXTRACT(epoch FROM CAST(call_end AS TIMESTAMP))-EXTRACT(epoch FROM CAST(call_begin AS TIMESTAMP)) > 0 ) aa 

   
left join 
(select distinct meaning,code from dc_dim.dim_province_code_all ff ) b
on aa.bus_pro_id = b.code
group  by meaning,"月","天",call_id,caller_no;
